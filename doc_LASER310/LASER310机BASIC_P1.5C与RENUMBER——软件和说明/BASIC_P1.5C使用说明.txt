摘录自《Laser310微电脑软硬件系统剖析》彭辛岷

P1.5的扩展功能

    本系统在V2.0的基础上，发据出Level II的全部功能，模拟了APPLESOFT和PC-1500 BASIC的部分功能，还具有一些上述系统都不具备的独特功能。扩展的语句命令和函数共计四十三种。现将保留词、用法和功能简介如下。



    系统功能
    （1）BYE
	退出
    退出P1.5，重新启动V2.0。



    BASIC程序管理功能
    （1）AUTO 首行行号，行号增量
	自动产生行号
    按给定参数自动产生行号，接受输入的程序行。回车后按增量产生下行行号……直至行号>65529或按了BREAK为止。如某一参数缺省则自动设为0。程序区已有与所产生的行号相同的程序行时，显示该行，光标在行末。

    （2）RENUN 首行行号，行号增量
    重编行号
    可按规定系列将程序行号全部重编，某一参数缺省时自动设定为10。因系统规模所限，本功能仅为简易型，不处理语句中的目标行号，需用户自行修改。如需全部用程序处理，请采用笔者开发的“LASER RENUMBER”程序。

	（3）DEL 起始行号——结束行号
	成片删除
    删除指定范围的全部程序行；如起始行号缺省，则删除指定行号及它前面的所有行。

	（4）PLOAD “文件名”
	拼接读带
    在保存内存中现有文件的同时，从磁带上装入一个BASIC文件，以便二者拼接。
    （5）MERGE
	程序拼接
    用PLOAD命令装入供拼接的程序后，此命令可将它同内存原有程序拼接为一个程序。后调入程序排列在前，原有程序接在其后；并不按行号大小顺序。如拼接后行号顺序颠倒，仍可按排列顺序执行，但GOTO等语句可能出错，所以一般应重编行号。
    （6）MERGE 0
	撤销拼接
    当错调拼接文件，装载出错或意图改变时，此命令可清除装入的内容，恢复原有程序
	（7）PRINT&PST
	恢复被清除的程序
    可恢复被NEW命令清除的BASIC程序。如NEW后又键入了新的程序行，只要尚未达到原来程序的长度，亦可部分恢复显示（首行可能不正确），但程序首址已变为当前地址。如NEW后使用过Pl.5扩展命令，或在直接命令中使用过变量，也只能恢复未被新的变量区覆盖的部分。以上两种情况都可用LOMEM 0命令使残余程序段复位到程序区起始端。



    机器语言程序管理功能
    （1）LOMEW低端地址
	低端内存保护

——84——

    设定BASIC程序区起始地址，从7B04H（31492）到设定地址的前一单元，不受系统的控制，为用户所有。在已经输入BASIC程序以后，仍可用此命令开辟保留区；已开辟保留区还可重新改变其地址。BASIC程序将自动在内存中移动，不会遭到破坏。地址参数取十进制正值（31492~65535），保留区内用户可用来存贮数据的最低地址为31492，前面是预置的BASIC启动程序。

	（2）LOMEM 0
	撤销保留区
    清除保留区数据，BASIC首址前移至7AE9H，程序不受影响。

	（3）CALL 入口地址
	调用机器语言子程序
    从指定地址开始执行机器程序，遇到返回指令时返回BASIC程序的断点继续运行。地址参数取十进制正值（0~65535）。

	（4）SAVEB “文件名”
	二进制文件写入磁带
    将低端用户保留区7B04H以后的全部内容，以二进制格式存贮在磁带上。记带期间禁按BREAK。

	（5）SAVEA “文件名”
	二进制/BASIC复合文件写入磁带
	将BASIC程序连同保留区内全部信息以BASlC文本文件的格式记入磁带。以后装入内存可自动调整指针，并启动BASIC程序。



	显示功能
    （1）SPEED 延时值
	显示、打印速度控制
    设定显示每一行之间的延时值。取0为正常速度，取1~256时间间隔次第加长，SPEED 256时显示行间约间隔一分钟。延时对显示、打印数据及程序清单均有效。中途按“.”键，恢复正常速度。

	（2）&P0S(0)
	取光标的行位置
    其值为光标在当前的行中的位置（0~31）



	数据处理功能
	（1）DEFDBL 字母或字母范围
	定义双精度变量
    把以指定字母开头的变量都定义为双精度变量，使能保持16位有效数字；带类型标志$、%和！者除外。赋给双精度变量的数值应该是双精度的，否则六位以后的数字无意义。精度常数用#号标注。不同精度的变量或数值间进行运算时结果为较高精度类型。字母可分别指定，用逗号分隔，也可按英文字母表的顺序，指定范围，如DEFDBL N, M, D-G。

	（2）DEFINT 字母或字母范围
	定义整型变量
    将以指定字母开头的变量都定义为整型（带$、！标志者除外），存放整数（32767≥N≥-32768）。用法同上。

    （3）DERSTR 字母或字母范围
	定义字符串变量
    将以指定字母开头的变量均定义为字符串型（带%、！标志者除外）。用法同上。

	（4）DEFSNG 字母或字母范围
	定义单精度变量
    将以指定字母开头的变量均定义为单精度型（带%、$标志者除外）。由于系统初始化时已将所有变量均定义为单精度型，它一般只在重新定义时使用。用法同上。变量重新定义后即失去原有的值。

	（5）&CDBL(表达式)取双精度值

——85——

    函数为自变量的双精度值。

    （6）&CSNG(表达式)
	取单精度值
    函数为自变量的单精度值。如自变量是双精度时，多余位数四舍五入。

    （7）&CINT(表达式)
	取整型值
    函数为自变量的整型值（不大于自变量的最大整数）。自变量的范围是：32767≤N≥-32768。

	（8）&FIX(表达式)
	数值截尾
    取自变量的整数部分。当自变量为负数时，函数值将大于自变量。如：&FIX(-3.14)=-3，而INT(-3.14)=-4。

	（9）&STRING$(长度,字符)
	同一字符的字符串
	函数值为由指定的同一字符组成的、指定长度的字符串。参数可为表达式。长度受字符串区容量的限制；要先用CLEAR开辟足够的空间。字符串自变量多于一个字符时，只取首字符。

	（10）RANDOM
	打开随机数发生器
    由于产生RND函数的种子值是一定的，并由同一子程序计算而得，所以只是伪随机数。
在调用RND之前使用本语句，可用当时CPU刷新寄存器的值改变种子值，增加RND函数的随机性。



    监测功能
    （1）TRON
	打开跟踪功能
    BASIC程序运行时将显示所执行的每一行号。

	（2）TROFF
	关闭跟踪功能

	（3）&LAD(表达式)
	取行地址
    自变量为一行号值。函数值为此行在内存的首址。

	（4）&VARPTR(变量名)
	取变量地址
    函数值为指定变量在变量区的首址。

	（5）&MEM
	取空闲内存字节数
    函数值为当前BASIC程序尚可使用的内存空间剩余字节总数。

	（6）&FRE(字符串变量名)
	取空闲字符串区字节数
	函数值为当前字符串区尚可使用的字节总数。自变量可用任一字等串变量名。

	
	
	BASIC程序控制功能
    （1）RST 表达式
	重置读数据指针
    参数为一行号值；将读数据指针指向该行，READ语句将从此行开始从BATA语句中读取数据。

    （2）ON 表达式 GOTO 行号1，行号2……
	控制转移根据表达式的值N，转移到第N个行号的行去继续运行。如N大于行号个数，或N<1，则不转移，顺序执行下一语句。

	（3）ON 表达式 GOSUB 行号1，行号2，……
	控制调用子程序
	根据表达式值N，决定调用第N个行号为入口的BASIC子程序。规则同上。

	（4）POP 行号
	清栈转移

——86——

    在用GOSUB转入子程序后，如不需要返回原来的断点，此语句可在执行RETURN清除堆栈功能后，转向指定行号继续运行。


	
	错误处理功能
    （1）ONERR GOTO 行号
	进入出错转移状态
    此后程序出错时，不再中断运行和显示错误信息，而是转到本语句指定的行号（一般是一个处理错误的子程序入口）去继续运行。

	（2）ONERR GOTO 0
	终止出错转移状态
    取消上一个ONERR语句的作用。如在已经出错并转移后执行此语句，就停止运行，显示原来的错误信息。

	（3）&ERR 取错误代码
    函数值为当前的错误代码，可用以辨别错误的性质。

	（4）&ERL 取出错行号
    函数值为当时产生错误的行号。直接命令出错时其值为65535。

	（5）RESUM 0
	返回到出错的语句
    由于ONERR语句的作用捕获到错误并转入错误处理子程序后，须用RESUE语句结束返回，否则仍处于捕获错误的状态，系统将拒绝处理下一次的错误。本语句是返回出错语句重新执行，之前应采取措施使得错误不再发生，否则陷入无限循环。

	（6）RESTME NEXT
	返回出错语句的下一个语句
	可用来跳过产生错误的语句。

	（7）RESEME 行号
	返回并转移
    从出错状态中返国并转移到指定行号继续运行。

	（8）ERROR 错误编号
	模拟错误
    执行此语句的作用，等效于发生该编号的“错误”。可用于调式错误处理子程序。错误编号=错误代码/2+1。错误编号范围为0~23，如参数值超出，本身就是一种错误（错误编号出界，&ERR=38）。
